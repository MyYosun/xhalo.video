<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:redis="http://www.springframework.org/schema/redis"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/cache
            http://www.springframework.org/schema/cache/spring-cache.xsd
            http://www.springframework.org/schema/redis
            http://www.springframework.org/schema/redis/spring-redis-1.0.xsd">

    <!--redis开始-->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis.maxIdle}"/>
        <property name="maxWaitMillis" value="${redis.maxWait}"/>
        <property name="testOnBorrow" value="${redis.testOnBorrow}"/>
    </bean>

    <bean id="redisConnectionFactory"
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis.host}"/>
        <property name="port" value="${redis.port}"/>
        <!-- <property name="password" value="${redis.pass}" /> -->
        <property name="poolConfig" ref="poolConfig"/>
        <property name="database" value="${redis.database}"/>
    </bean>

    <bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer"/>

    <bean id="jdkSerializationRedisSerializer"
          class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="redisConnectionFactory"/>
        <property name="keySerializer" ref="stringRedisSerializer"/>
        <property name="valueSerializer" ref="jdkSerializationRedisSerializer"/>
        <property name="hashKeySerializer" ref="stringRedisSerializer"/>
        <property name="hashValueSerializer" ref="jdkSerializationRedisSerializer"/>
    </bean>

    <bean id="redisCacheWriter" class="org.springframework.data.redis.cache.DefaultRedisCacheWriter">
        <constructor-arg name="connectionFactory" ref="redisConnectionFactory"/>
    </bean>

    <bean id="defaultRedisCacheConfiguration" class="org.springframework.data.redis.cache.RedisCacheConfiguration"
          factory-method="defaultCacheConfig"/>

    <bean id="videoRedisCache" class="org.springframework.data.redis.cache.RedisCache">
        <constructor-arg name="name" value="video"/>
        <constructor-arg name="cacheWriter" ref="redisCacheWriter"/>
        <constructor-arg name="cacheConfig" ref="defaultRedisCacheConfiguration"/>
    </bean>

    <bean id="categoryRedisCache" class="org.springframework.data.redis.cache.RedisCache">
        <constructor-arg name="name" value="category"/>
        <constructor-arg name="cacheWriter" ref="redisCacheWriter"/>
        <constructor-arg name="cacheConfig" ref="defaultRedisCacheConfiguration"/>
    </bean>

    <!--注册三个cache集合-->
    <bean id="redisCacheManager" class="org.springframework.cache.support.SimpleCacheManager">
        <property name="caches">
            <set>
                <ref bean="videoRedisCache"/>
                <ref bean="categoryRedisCache"/>
            </set>
        </property>
    </bean>

    <!--redis消息监听开始-->
    <bean id="messageListenerAdapter" class="org.springframework.data.redis.listener.adapter.MessageListenerAdapter">
        <property name="delegate" ref="redisMQ"/>
        <property name="stringSerializer" ref="stringRedisSerializer"/>
        <property name="serializer" ref="jdkSerializationRedisSerializer"/>
    </bean>

    <!--注意一定要定义连接工厂的id=redisConnectionFactory，否则启动报错-->
    <redis:listener-container>
        <redis:listener ref="messageListenerAdapter" method="handleMessage" serializer="jdkSerializationRedisSerializer"
                        topic="message"/>
    </redis:listener-container>

    <cache:annotation-driven cache-manager="redisCacheManager"/>
    <!--redis结束-->

</beans>