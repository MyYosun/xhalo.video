<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="net.xhalo.video.dao.VideoDao">

    <resultMap type="net.xhalo.video.model.Video" id="VideoMap">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="click" jdbcType="INTEGER" property="click"/>
        <result column="date" jdbcType="TIMESTAMP" property="date"
                javaType="java.util.Date"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="view" jdbcType="VARCHAR" property="view"/>
        <result column="duration" jdbcType="INTEGER" property="duration"/>
        <result column="info" jdbcType="VARCHAR" property="info"/>
        <association property="category" javaType="net.xhalo.video.model.Category">
            <id property="id" column="category_id"/>
            <result property="name" column="category_name"/>
        </association>
        <association property="author" javaType="net.xhalo.video.model.User">
            <id property="id" column="author_id"/>
            <result property="username" column="author_username"/>
            <result property="nickname" column="author_nickname"/>
            <result property="headImg" column="author_head_img"/>
        </association>
    </resultMap>

    <insert id="addVideo" parameterType="net.xhalo.video.model.Video">
		INSERT INTO video_table(
		title,
		click,
		date,
		address,
		view,
		duration,
		info,
		category,
		author
		)
		VALUES(
		#{title},
		#{click},
		#{date},
		#{address},
		#{view},
		#{duration},
		#{info},
		#{category.id},
		#{author.id}
		)
	</insert>

    <select id="getVideosOrderByWhat" parameterType="String"
            resultMap="VideoMap">
		SELECT
		a.id,
		a.title,
		a.click,
		a.date,
		a.address,
		a.view,
		a.duration,
		a.info,
		b.id category_id,
		b.name category_name,
		c.id author_id,
		c.username author_username,
		c.nickname author_nickname,
		c.head_img author_head_img
		FROM
		video_table a,
		category_table b,
		user_table c
		WHERE
		a.category=b.id
		AND
		a.author=c.id
		ORDER BY ${orderItem} DESC
	</select>

    <select id="getVideosByCategoryAndOrderByWhat" resultMap="VideoMap">
        SELECT
        a.id,
        a.title,
        a.click,
        a.date,
        a.address,
        a.view,
        a.duration,
        a.info,
        b.id category_id,
        b.name category_name,
        c.id author_id,
        c.username author_username,
        c.nickname author_nickname,
        c.head_img author_head_img
        FROM
        video_table a,
        category_table b,
        user_table c
        WHERE
        a.category=#{video.category.id}
        AND
        a.category=b.id
        AND
        a.author=c.id
        <if test="optionDurationSql != null">
            ${optionDurationSql}
        </if>
        ORDER BY ${orderItem} DESC
    </select>

    <select id="getVideosByTitleAndOrderByWhat" resultMap="VideoMap">
        SELECT
        a.id,
        a.title,
        a.click,
        a.date,
        a.address,
        a.view,
        a.duration,
        a.info,
        b.id category_id,
        b.name category_name,
        c.id author_id,
        c.username author_username,
        c.nickname author_nickname,
        c.head_img author_head_img
        FROM
        video_table a,
        category_table b,
        user_table c
        WHERE
        a.title like CONCAT(CONCAT('%', #{video.title}), '%')
        AND
        a.category=b.id
        AND
        a.author=c.id
        <if test="optionDurationSql != null">
            ${optionDurationSql}
        </if>
        ORDER BY ${orderItem} DESC
    </select>

    <select id="getVideoById" parameterType="LONG" resultMap="VideoMap">
		SELECT
		a.id,
		a.title,
		a.click,
		a.date,
		a.address,
		a.view,
		a.duration,
		a.info,
		b.id category_id,
		b.name category_name,
		c.id author_id,
		c.username author_username,
		c.nickname author_nickname,
		c.head_img author_head_img
		FROM
		video_table a,
		category_table b,
		user_table c
		WHERE
		a.id=#{videoId}
		AND
		a.author=c.id
		AND
		a.category=b.id
		LIMIT 1
	</select>

    <update id="addClickById" parameterType="LONG">
		UPDATE
		video_table
		SET
		click = click + 1
		WHERE
		id = #{videoId}
	</update>

    <select id="getVideosByAuthor" parameterType="net.xhalo.video.model.User" resultMap="VideoMap">
		SELECT
		a.id,
		a.title,
		a.click,
		a.date,
		a.address,
		a.view,
		a.duration,
		a.info,
		b.id category_id,
		b.name category_name,
		c.id author_id,
		c.username author_username,
		c.nickname author_nickname,
		c.head_img author_head_img
		FROM
		video_table a,
		category_table b,
		user_table c
		WHERE
		a.author=#{id}
		AND
		a.author=c.id
		AND
		a.category=b.id
		ORDER BY a.date DESC
	</select>

    <delete id="deleteVideoByAuthorAndId">
		DELETE FROM
		video_table
		WHERE
		id=#{id}
		AND
		author=#{author.id}
	</delete>

    <select id="getLikeVideosByUser" parameterType="net.xhalo.video.model.User" resultMap="VideoMap">
		SELECT
		a.id,
		a.title,
		a.click,
		a.date,
		a.address,
		a.view,
		a.duration,
		a.info,
		b.id category_id,
		b.name category_name,
		c.id author_id,
		c.username author_username,
		c.nickname author_nickname,
		c.head_img author_head_img
		FROM
		video_table a,
		category_table b,
		user_table c,
		user_like_video_table d
		WHERE
		d.user_id=#{id}
		AND
		a.id=d.video_id
		AND
		a.author=c.id
		AND
		a.category=b.id
		ORDER BY a.date DESC
	</select>

    <select id="getAllVideos" resultMap="VideoMap">
		SELECT
		a.id,
		a.title,
		a.click,
		a.date,
		a.address,
		a.view,
		a.duration,
		a.info,
		b.id category_id,
		b.name category_name,
		c.id author_id,
		c.username author_username,
		c.nickname author_nickname,
		c.head_img author_head_img
		FROM
		video_table a
		LEFT JOIN
		category_table b
		ON a.category = b.id
		LEFT JOIN
		user_table c
		ON a.author = c.id
		ORDER BY a.date DESC
	</select>

    <select id="getVideoByIdNotRelated" parameterType="LONG" resultMap="VideoMap">
		SELECT
		a.id,
		a.title,
		a.click,
		a.date,
		a.address,
		a.view,
		a.duration,
		a.info,
		b.id category_id,
		b.name category_name,
		c.id author_id,
		c.username author_username,
		c.nickname author_nickname,
		c.head_img author_head_img
		FROM
		video_table a
		LEFT JOIN
		category_table b
		ON a.category = b.id
		LEFT JOIN
		user_table c
		ON a.author = c.id
		WHERE
		a.id=#{videoId}
		LIMIT 1
	</select>

    <delete id="deleteById" parameterType="net.xhalo.video.model.Video">
		DELETE FROM
		video_table
		WHERE
		id=#{id}
	</delete>
</mapper>
